{
        "class": {
                "compare.with.collated..st": "",
                "cr.st": "",
                "crLfExchangeTable.st": "",
                "crlf.st": "",
                "crlfcrlf.st": "",
                "empty.st": "",
                "example.st": "",
                "expandMacro.argument.withExpansions..st": "",
                "findFirstInString.inSet.startingAt..st": "",
                "fromByteArray..st": "",
                "fromPacked..st": "",
                "fromString..st": "",
                "htmlEntities.st": "",
                "indexOfAscii.inString.startingAt..st": "",
                "initialize.st": "",
                "initializeHtmlEntities.st": "",
                "lf.st": "",
                "new..st": "",
                "readFrom..st": "",
                "space.st": "",
                "stringHash.initialHash..st": "",
                "tab.st": "",
                "translate.from.to.table..st": "",
                "value..st": "",
                "with..st": ""
        },
        "instance": {
                "^backslash.backslash.st": "",
                "^comma.st": "",
                "^equals.st": "",
                "^less.equals.more.st": "",
                "^less.equals.st": "",
                "^less.st": "",
                "^minus.st": "",
                "^more.equals.st": "",
                "^more.st": "",
                "^plus.st": "",
                "^slash.slash.st": "",
                "^slash.st": "",
                "^star.st": "",
                "adaptToCollection.andSend..st": "",
                "adaptToNumber.andSend..st": "",
                "adaptToPoint.andSend..st": "",
                "adaptToString.andSend..st": "",
                "alike..st": "",
                "applyLanguageInformation..st": "",
                "asAscii.st": "",
                "asByteArray.st": "",
                "asByteString.st": "",
                "asCamelCase.st": "",
                "asCharacter.st": "",
                "asDate.st": "",
                "asDateAndTime.st": "",
                "asDecomposedUnicode.st": "",
                "asDisplayText.st": "",
                "asDuration.st": "",
                "asExplorerString.st": "",
                "asFileName.st": "",
                "asFourCode.st": "",
                "asHex.st": "",
                "asHtml.st": "",
                "asIdentifier..st": "",
                "asInteger.st": "",
                "asIntegerSigned..st": "",
                "asLegalSelector.st": "",
                "asLowercase.st": "",
                "asNumber.st": "",
                "asOctetString.st": "",
                "asPacked.st": "",
                "asPluralBasedOn..st": "",
                "asPrecomposedUnicode.st": "",
                "asSignedInteger.st": "",
                "asSmalltalkComment.st": "",
                "asSqueakPathName.st": "",
                "asString.st": "",
                "asStringOrText.st": "",
                "asSymbol.st": "",
                "asText.st": "",
                "asTextFromHtml.st": "",
                "asTime.st": "",
                "asTimeStamp.st": "",
                "asUnHtml.st": "",
                "asUnsignedInteger.st": "",
                "asUppercase.st": "",
                "asVmPathName.st": "",
                "asWideString.st": "",
                "ascii85Decoded.st": "",
                "ascii85DecodedAs..st": "",
                "ascii85Encoded.st": "",
                "askIfAddStyle.req..st": "",
                "base64Decoded.st": "",
                "base64Encoded.st": "",
                "beginsWith..st": "",
                "byteAt..st": "",
                "byteAt.put..st": "",
                "byteEncode..st": "",
                "byteSize.st": "",
                "canBeToken.st": "",
                "capitalized.st": "",
                "caseInsensitiveLessOrEqual..st": "",
                "caseSensitiveLessOrEqual..st": "",
                "charactersExactlyMatching..st": "",
                "combinations.atATimeDo..st": "",
                "compare..st": "",
                "compare.caseSensitive..st": "",
                "compare.with.collated..st": "",
                "compareSafely..st": "",
                "compressWithTable..st": "",
                "contractTo..st": "",
                "convertFromEncoding..st": "",
                "convertFromSuperSwikiServerString.st": "",
                "convertFromWithConverter..st": "",
                "convertToEncoding..st": "",
                "convertToSuperSwikiServerString.st": "",
                "convertToSystemString.st": "",
                "convertToWithConverter..st": "",
                "copyReplaceTokens.with..st": "",
                "correctAgainst..st": "",
                "correctAgainst.continuedFrom..st": "",
                "correctAgainstDictionary.continuedFrom..st": "",
                "correctAgainstEnumerator.continuedFrom..st": "",
                "crc16.st": "",
                "decodeMimeHeader.st": "",
                "decodeQuotedPrintable.st": "",
                "deepCopy.st": "",
                "displayAt..st": "",
                "displayOn..st": "",
                "displayOn.at..st": "",
                "displayOn.at.textColor..st": "",
                "do.toFieldNumber..st": "",
                "encodeDoublingQuoteOn..st": "",
                "encodeForHTTP.st": "",
                "encodeForHTTPWithTextEncoding..st": "",
                "encodeForHTTPWithTextEncoding.conditionBlock..st": "",
                "endsWith..st": "",
                "endsWithAColon.st": "",
                "endsWithAnyOf..st": "",
                "endsWithDigit.st": "",
                "expandMacros.st": "",
                "expandMacrosWith..st": "",
                "expandMacrosWith.with..st": "",
                "expandMacrosWith.with.with..st": "",
                "expandMacrosWith.with.with.with..st": "",
                "expandMacrosWithArguments..st": "",
                "findAnySubStr.startingAt..st": "",
                "findBetweenSubStrs..st": "",
                "findCloseParenthesisFor..st": "",
                "findDelimiters.startingAt..st": "",
                "findLastOccurrenceOfString.startingAt..st": "",
                "findSelector.st": "",
                "findString..st": "",
                "findString.startingAt..st": "",
                "findString.startingAt.caseSensitive..st": "",
                "findSubstring.in.startingAt.matchTable..st": "",
                "findTokens..st": "",
                "findTokens.escapedBy..st": "",
                "findTokens.includes..st": "",
                "findTokens.keep..st": "",
                "findWordStart.startingAt..st": "",
                "format..st": "",
                "hash.st": "",
                "hashWithInitialHash..st": "",
                "howManyMatch..st": "",
                "includesSubstring..st": "",
                "includesSubstring.caseSensitive..st": "",
                "includesUnifiedCharacter.st": "",
                "indentationIfBlank..st": "",
                "indexOf.startingAt..st": "",
                "indexOfSubCollection.startingAt..st": "",
                "initialIntegerOrNil.st": "",
                "isAllDigits.st": "",
                "isAllSeparators.st": "",
                "isAsciiString.st": "",
                "isByteString.st": "",
                "isLiteral.st": "",
                "isOctetString.st": "",
                "isString.st": "",
                "isWideString.st": "",
                "isoToSqueak.st": "",
                "isoToUtf8.st": "",
                "keywords.st": "",
                "lastSpacePosition.st": "",
                "leadingCharRunLengthAt..st": "",
                "lineCorrespondingToIndex..st": "",
                "lineCount.st": "",
                "lineIndicesDo..st": "",
                "lineNumber..st": "",
                "lines.st": "",
                "linesDo..st": "",
                "macToSqueak.st": "",
                "match..st": "",
                "numArgs.st": "",
                "numericSuffix.st": "",
                "occurrencesOf..st": "",
                "onlyLetters.st": "",
                "padded.to.with..st": "",
                "printAsLiteralOn..st": "",
                "printOn..st": "",
                "putOn..st": "",
                "replaceFrom.to.with.startingAt..st": "",
                "romanNumber.st": "",
                "sameAs..st": "",
                "sansPeriodSuffix.st": "",
                "skipAnySubStr.startingAt..st": "",
                "skipDelimiters.startingAt..st": "",
                "splitInteger.st": "",
                "squeakToIso.st": "",
                "squeakToMac.st": "",
                "squeakToUtf8.st": "",
                "startingAt.match.startingAt..st": "",
                "startsWithDigit.st": "",
                "stemAndNumericSuffix.st": "",
                "storeOn..st": "",
                "string.st": "",
                "stringRepresentation.st": "",
                "stringhash.st": "",
                "subStrings..1.st": "",
                "subStrings..st": "",
                "substrings..2.st": "",
                "surroundedBySingleQuotes.st": "",
                "tabDelimitedFieldsDo..st": "",
                "translateFrom.to.table..st": "",
                "translateToLowercase.st": "",
                "translateToUppercase.st": "",
                "translateWith..st": "",
                "truncateTo..st": "",
                "truncateWithElipsisTo..st": "",
                "unescapePercents.st": "",
                "unescapePercentsRaw.st": "",
                "unescapePercentsWithTextConverter..st": "",
                "unescapePercentsWithTextEncoding..st": "",
                "unparenthetically.st": "",
                "utf8ToIso.st": "",
                "utf8ToSqueak.st": "",
                "vmPathToSqueakPath.st": "",
                "withBlanksCondensed.st": "",
                "withBlanksTrimmed.st": "",
                "withCRs.st": "",
                "withFirstCharacterDownshifted.st": "",
                "withInternetLineEndings.st": "",
                "withLineEndings..st": "",
                "withNoLineLongerThan..st": "",
                "withSeparatorsCompacted.st": "",
                "withSqueakLineEndings.st": "",
                "withUnixLineEndings.st": "",
                "withoutJustTrailingDigits.st": "",
                "withoutLeadingBlanks.st": "",
                "withoutLeadingDigits.st": "",
                "withoutLineEndings.st": "",
                "withoutQuoting.st": "",
                "withoutTrailingBlanks.st": "",
                "withoutTrailingDigits.st": "",
                "writeLeadingCharRunsOn..st": ""
        }
}