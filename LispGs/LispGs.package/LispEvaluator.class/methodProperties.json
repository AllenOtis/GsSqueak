{
        "class": {
                "aliasForPrimitive..st": "",
                "allCategories.st": "",
                "compilePrimitiveLists.st": "",
                "eval..st": "",
                "evaluate..st": "",
                "falseValue.st": "",
                "initialize.st": "",
                "primitiveSelectors.st": "",
                "primitives.st": "",
                "setter.st": "",
                "specialFormSelectors.st": "",
                "specialForms.st": "",
                "test..st": "",
                "trueValue.st": ""
        },
        "instance": {
                "LISPand..st": "",
                "LISPor..st": "",
                "^less.equals.st": "",
                "^less.st": "",
                "^minus.st": "",
                "^more.equals.st": "",
                "^more.st": "",
                "^plus.st": "",
                "^slash.st": "",
                "^star.st": "",
                "booleanP..st": "",
                "car..st": "",
                "cdr..st": "",
                "charP..st": "",
                "checkSymbol..st": "",
                "complexP..st": "",
                "cond..st": "",
                "cons..st": "",
                "consP..st": "",
                "constantVariables..st": "",
                "constantVariables.st": "",
                "declarations..st": "",
                "declarations.st": "",
                "define..st": "",
                "definePrimitiveAliases.st": "",
                "enterInterpreterContextAndEval..st": "",
                "environment..st": "",
                "environment.st": "",
                "eqP..st": "",
                "equalP..st": "",
                "eqvP..st": "",
                "error..st": "",
                "eval..st": "",
                "evalIrregularProcedure.withArguments..st": "",
                "evalList..st": "",
                "evalObject..st": "",
                "evalObject.multipleValue..st": "",
                "evalSemaphore.st": "",
                "evalTailObject..st": "",
                "evaluate..st": "",
                "falseValue.st": "",
                "if..st": "",
                "initialize.st": "",
                "installPrimitiveAliases..st": "",
                "isProcedure..st": "",
                "lambda..st": "",
                "lambdaForm.withArgsAndBody..st": "",
                "length..st": "",
                "let..st": "",
                "letStar..st": "",
                "letrec..st": "",
                "lispError..st": "",
                "list..st": "",
                "listP..st": "",
                "lookUpFunction..st": "",
                "makeClosureFor..st": "",
                "makeClosureFor.as..st": "",
                "not..st": "",
                "nullP..st": "",
                "progn..st": "",
                "quote..st": "",
                "rewriteAndEval..st": "",
                "stringP..st": "",
                "subLisp.form.body..st": "",
                "subLisp.form.body.bindings..st": "",
                "subLisp.form.body.environment..st": "",
                "symbolFunction.ifNone..st": "",
                "symbolP..st": "",
                "symbolValue.ifNone..st": "",
                "symbolValuesAdd..st": "",
                "test..st": "",
                "trueValue.st": "",
                "upperHead..st": "",
                "upperHead.st": "",
                "upperLisp..st": "",
                "upperLisp.st": "",
                "upperTail..st": "",
                "upperTail.st": "",
                "zeroP..st": ""
        }
}