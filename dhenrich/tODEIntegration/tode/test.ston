TDScriptLeafNode{#name:'test',#contents:'[ :topez :objIn :tokens :command :commandNode | 
  | opts args |
  \"for help: ./test -h\"
  command getOptsMixedLongShort: {#(\'help\' $h #\'none\').
      #(\'debug\' nil #\'none\')} optionsAndArguments: [ :options :operands | opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ | session stream |
      session := topez evaluateCommandString: \'/home/remote --session\'.
      session ifNil: [ session := topez
            evaluateCommandString:
              \'/home/remote  --username=SystemUser --password=swordfish --login=\'
                , topez serverStoneName ].
      stream := WriteStream on: String new.
      args isEmpty
        ifTrue: [ | res |
          res := opts
            at: \'debug\'
            ifPresent: [ :ignored | session executeBlock: [ | allTests str |
                  System abort.
str := \'\'.
                  allTests := TestCase suite.
                  allTests tests
                        do: [ :each | str := str , \' \' , each printString.
                          self sunitChanged: each.
                          each debug ].
                      str ] ]
            ifAbsent: [ session executeBlock: [ | allTests |
                  System abort.
                  allTests := TestCase suite.
                  \'AllTests\' , \'--> \' , allTests run printString ] ].
          stream
            nextPutAll: res;
            lf ]
        ifFalse: [ args do: [ :testCase | opts
                at: \'debug\'
                ifPresent: [ :ignored | session executeBlock: [ :tc | | suite str |
                      System abort.
                      str := \'\'.
                      suite := (GsSession currentSession symbolList
                        objectNamed: tc) suite.
                      suite tests
                        do: [ :each | str := str , \' \' , each printString.
                          self sunitChanged: each.
                          each debug ].
                      str ] with: testCase.
                  stream
                    nextPutAll: testCase , \' debugged\';
                    lf ]
                ifAbsent: [ | res |
                  res := session executeBlock: [ :tc | | suite |
                      System abort.
                      suite := (GsSession currentSession symbolList
                        objectNamed: tc) suite.
                      tc , \'--> \' , suite run printString ] with: testCase.
                  stream
                    nextPutAll: res;
                    lf ] ] ].
      stream contents printString ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  testMetacello - testMetacello script utility template
SYNOPSIS
  testMetacello [-h|--help]
DESCRIPTION
EXAMPLES
  ./test --help
  ./test -h

  ./remote  --username=SystemUser --password=swordfish --login=cypress
  ./test --debug MetacelloPlatformTestCase 
  ./test MetacelloPlatformTestCase 

  ./test --debug MetacelloPlatformTestCase MetacelloSemanticVersionNumberTestCase 
  ./test MetacelloPlatformTestCase MetacelloSemanticVersionNumberTestCase 

  ./test \"run all tests in image\"
\'
        topez: topez ] ]',#creationTime:DateAndTime['2016-09-16T06:34:27.55563688278198-07:00'],#modificationTime:DateAndTime['2016-10-07T20:41:03.419887065887451-07:00']}