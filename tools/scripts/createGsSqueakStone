#!/bin/bash

set -ex
set -o pipefail

restore=false
restoreFast=false
while getopts "r f" opt; do
	case $opt in
		r) restore=true
		;;
		f) restoreFast=true
		;;
	esac
done

shift $((OPTIND-1))
name=$1;

export name

if $restoreFast
then
    todeRestore $name fast.dbf
else
if $restore
then
    todeRestore $name tode.dbf
else
    createStone -f $name 3.5.0
fi

startTopaz $name -l << EOF
set u SystemUser p swordfish
login
run
SystemObjectSecurityPolicy worldAuthorization: #write.
(AllUsers userWithId: 'DataCurator') addPrivilege: #'CompilePrimitives'.
%
run
GsCompilerClasses keysAndValuesDo: [:symbol : class | Globals at: symbol put: class ]
%
commit
logout
login

input $GS_HOME/server/stones/$name/product/upgrade/GsNMethodIr.gs

commit
logout
set u DataCurator p swordfish
login
method: Behavior
_clearSubclassesDisallowed
    self _unsafeAt: 2 put: (format bitAnd: (16r20 bitInvert))
%
send Behavior _clearSubclassesDisallowed
send LargeInteger _clearSubclassesDisallowed

env 7
method: Class
name
    ^ self @env0: name
%

commit
logout
exit
EOF

loadPackage BPBugFixes "tools/bugfixes"
loadPackage MCEnvSwitch "tools/MCEnvSwitch"
loadPackage SqueakParser "parser"
loadPackage SqSuperclasses "tools/superclasses"
loadPackage SqueakEnvironments "tools/SqueakEnvironments"
loadPackage -S SqContext
loadPackage -S SqClassCreation
loadPackage Workspace "tools"
loadPackage -S BPGsTests

todeBackup $name fast.dbf
fi

startTopaz $name -l << EOF
login
run
MCEnv set: 7.
MCEnv useSqueakParser.
Environment initialize.
Object addClassVarName: 'DependentsFields'.
%
commit
logout
exit
EOF

loadPackage EnvironmentsEnv7 "tools/SqueakEnvironments"
loadPackage -S SqContext7
loadPackage -S SqBooleans
loadPackage -S SqClasses
startTopaz $name -l << EOF
login
run
(SqueakEnvironment at: #ProtoObject) _setSelfCanBeSpecial recompileAllMethodsUsingSqueakParserInEnv: 7.
%
commit
logout
exit
EOF

loadPackage -S SqExceptions
loadPackage -S SqNumbers
startTopaz $name -l << EOF
login
run
(SqueakEnvironment at: #Magnitude) _setSelfCanBeSpecial recompileAllMethodsUsingSqueakParserInEnv: 7.
(SqueakEnvironment at: #Number) _setSelfCanBeSpecial recompileAllMethodsUsingSqueakParserInEnv: 7.
(SqueakEnvironment at: #Integer) _setSelfCanBeSpecial recompileAllMethodsUsingSqueakParserInEnv: 7.
(SqueakEnvironment at: #ScaledDecimal) _setSelfCanBeSpecial recompileAllMethodsUsingSqueakParserInEnv: 7.
(SqueakEnvironment at: #Fraction) _setSelfCanBeSpecial recompileAllMethodsUsingSqueakParserInEnv: 7.
MCEnv useGemstoneParser.
%
commit
logout
exit
EOF

loadPackage -S SqBlock
loadPackage -S SqBlock

startTopaz $name -l << EOF
login
run
MCEnv useSqueakParser.
%
commit
logout
exit
EOF

loadPackage -S SqKernel
loadPackage -S SqCharacter

startTopaz $name -l << EOF
login
run
SmalltalkImage newMethodFromSqueakString: 'addToStartUpList: anObject' inEnv: 7.
SmalltalkImage newMethodFromSqueakString: 'addToStartUpList: aClass after: predecessor' inEnv: 7.
SmalltalkImage newMethodFromSqueakString: 'addToStartUpList: aClass before: predecessor' inEnv: 7.
SmalltalkImage newMethodFromSqueakString: 'addToShutDownList: anObject' inEnv: 7.
SmalltalkImage newMethodFromSqueakString: 'addToShutDownList: aClass after: predecessor' inEnv: 7.
SmalltalkImage newMethodFromSqueakString: 'addToShutDownList: aClass before: predecessor' inEnv: 7.
SmalltalkImage newMethodFromSqueakString: 'removeFromStartUpList: anObject' inEnv: 7.
SmalltalkImage newMethodFromSqueakString: 'removeFromShutDownList: anObject' inEnv: 7.

UserGlobals at: #ByteString put: String.
UserGlobals at: #ByteSymbol put: Symbol.
UserGlobals at: #MethodDictionary put: GsMethodDictionary.
UserGlobals at: #CompiledMethod put: GsNMethod.
%
commit
logout
exit
EOF

todeBackup $name preCollections
loadPackage -S '`Collections-Abstract`'
loadPackage -S '`Collections-Support`'
loadPackage -S SqCollectionLiterals
loadPackage -S SqCollections
loadPackage -S '`Collections-Sequenceable`'
loadPackage -S '`Collections-Heap`'
loadPackage -S '`Collections-Arrayed`'
loadPackage -S CompiledMethod
loadPackage -S SqWeak
loadPackage -S '`System-Object Events`'
loadPackage -S '`System-Change Notification`'
loadPackage -S '`System-Support`'
loadPackage -S SUnit
loadPackage -S SqCompiler

todeBackup $name flag1
loadPackage -S '`Kernel-Processes-Variables`'
loadPackage -S '`Kernel-Numbers`'
loadPackage -S '`Kernel-Pools`'
loadPackage -S '`MockClasses`'
loadPackage -S '`Chronology-Core`' # don't debug this! it causes pharo to crash

# loadPackage -S '`Kernel-Processes`'

todeBackup $name flag2
loadPackage -S '`Balloon`'
loadPackage -S '`VMMaker`'
loadPackage -S '`Kernel-Models`'
loadPackage -S '`System-FileRegistry`'

todeBackup $name flag3
loadPackage -S '`GraphicsLibrary`'
loadPackage -S '`Graphics-converting`'
loadPackage -S '`Graphics-Primitives`'
loadPackage -S '`Graphics-Display Objects`'
loadPackage -S SqKernelTestsNumbers
loadPackage -S '`KernelTests-Objects`'

startTopaz $name -l << EOF
login
run
(SqueakEnvironment at: #SystemOrganization put: ((SqueakEnvironment at: #SystemOrganizer) @env7: defaultList: SqueakEnvironment allClasses))
%
commit
logout
exit
EOF
