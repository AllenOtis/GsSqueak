'From Squeak5.1 of 5 September 2016 [latest update: #16549] on 2 November 2017 at 11:39:04 am'!Object subclass: #DrinklistCore	instanceVariableNames: 'mailClient users inventory transactions'	classVariableNames: ''	poolDictionaries: ''	category: 'Drinklist'!!DrinklistCore methodsFor: 'as yet unclassified' stamp: 'maf 10/26/2017 15:57'!add: anElement	anElement addTo: self! !!DrinklistCore methodsFor: 'as yet unclassified' stamp: 'hpi 11/2/2017 11:04'!addDrink: aDrink	inventory at: aDrink label put: aDrink! !!DrinklistCore methodsFor: 'as yet unclassified' stamp: 'maf 10/26/2017 15:58'!addTransaction: aTransaction	self transactions add: aTransaction! !!DrinklistCore methodsFor: 'as yet unclassified' stamp: 'WF 11/2/2017 10:05'!addUser: aUser	self users at: aUser userName put: aUser! !!DrinklistCore methodsFor: 'as yet unclassified' stamp: 'WF 11/2/2017 09:54'!initialize 	self 		users: Dictionary new;		inventory: Dictionary new;		transactions: OrderedCollection new.! !!DrinklistCore methodsFor: 'as yet unclassified' stamp: 'WF 11/1/2017 11:18'!transactionsFor: anUser	^ self transactions select: [:trans | trans user = anUser ].! !!DrinklistCore methodsFor: 'accessing' stamp: 'WF 11/2/2017 10:28'!buy: aDrinkLabel by: anUserName		|anUser aDrink transaction|		anUser := self userNamed: anUserName.	aDrink := self drinkNamed: aDrinkLabel.		(anUser isNil or: aDrink isNil) ifTrue:[^false].		anUser takeDrink: aDrink.		transaction := DrinklistTransaction createFor: anUserName with: aDrink.	self addTransaction: transaction.		^true! !!DrinklistCore methodsFor: 'accessing' stamp: 'WF 11/2/2017 10:17'!drinkNamed: aLabel	^self inventory at: aLabel.! !!DrinklistCore methodsFor: 'accessing' stamp: 'WF 10/26/2017 15:49'!drinks	^self inventory keys ! !!DrinklistCore methodsFor: 'accessing' stamp: 'maf 10/26/2017 11:45'!inventory		^ inventory! !!DrinklistCore methodsFor: 'accessing' stamp: 'maf 10/26/2017 11:45'!inventory: anObject		inventory := anObject.! !!DrinklistCore methodsFor: 'accessing' stamp: 'WF 11/2/2017 10:30'!mailClient	^ mailClient! !!DrinklistCore methodsFor: 'accessing' stamp: 'WF 11/2/2017 10:30'!mailClient: anObject	mailClient := anObject! !!DrinklistCore methodsFor: 'accessing' stamp: 'maf 10/26/2017 15:07'!transactions		^ transactions! !!DrinklistCore methodsFor: 'accessing' stamp: 'maf 10/26/2017 15:07'!transactions: anObject		transactions := anObject.! !!DrinklistCore methodsFor: 'accessing' stamp: 'MS 11/2/2017 11:34'!userNamed: aName	^self users at: aName		ifAbsent: [nil].! !!DrinklistCore methodsFor: 'accessing' stamp: 'maf 10/26/2017 11:45'!users		^ users! !!DrinklistCore methodsFor: 'accessing' stamp: 'WF 11/1/2017 12:19'!users: aDictionary		users := aDictionary.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DrinklistCore class	instanceVariableNames: 'instance'!!DrinklistCore class methodsFor: 'as yet unclassified' stamp: 'MS 11/2/2017 11:29'!instance	instance isNil 					ifTrue: [ instance := DrinklistCore new ].						^ instance	! !!DrinklistCore class methodsFor: 'as yet unclassified' stamp: 'hpi 11/2/2017 11:13'!reset	self instance: DrinklistCore new.	self seed! !!DrinklistCore class methodsFor: 'as yet unclassified' stamp: 'hpi 11/2/2017 11:12'!seed	self instance 			add: (DrinklistDrink create: 'Cola' whichCosts: 1);			add: (DrinklistDrink create: 'Bier' whichCosts: 1);			add: (DrinklistDrink create: 'Spritz' whichCosts: 1);			add: (DrinklistDrink create: 'Bauer' whichCosts: 2);			add: (DrinklistDrink create: 'Biobrause' whichCosts: 1);			add: (DrinklistUser create: 'test')! !