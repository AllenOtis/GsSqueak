line drawing
drawLoopX: xDelta Y: yDelta 	"Primitive. Implements the Bresenham plotting algorithm (IBM	Systems Journal, Vol. 4 No. 1, 1965). It chooses a principal direction,	and maintains a potential, P. When P's sign changes, it is time to	move in	the minor direction as well. This particular version does not write the	first and last points, so that these can be called for as needed in client	code. Optional. See Object documentation whatIsAPrimitive."	| _gsSqueakTemp_dx _gsSqueakTemp_dy _gsSqueakTemp_px _gsSqueakTemp_py _gsSqueakTemp_P |	self halt. "primitiveDrawLoop"	_gsSqueakTemp_dx := xDelta sign.	_gsSqueakTemp_dy := yDelta sign.	_gsSqueakTemp_px := yDelta abs.	_gsSqueakTemp_py := xDelta abs.	"self copyBits."	_gsSqueakTemp_py > _gsSqueakTemp_px		ifTrue: ["more horizontal"			_gsSqueakTemp_P := _gsSqueakTemp_py // 2.			1				to: _gsSqueakTemp_py				do: [:i | 					destX := destX + _gsSqueakTemp_dx.					(_gsSqueakTemp_P := _gsSqueakTemp_P - _gsSqueakTemp_px) < 0						ifTrue: [destY := destY + _gsSqueakTemp_dy.							_gsSqueakTemp_P := _gsSqueakTemp_P + _gsSqueakTemp_py].					i < _gsSqueakTemp_py						ifTrue: [self copyBits]]]		ifFalse: ["more vertical"			_gsSqueakTemp_P := _gsSqueakTemp_px // 2.			1				to: _gsSqueakTemp_px				do: [:i | 					destY := destY + _gsSqueakTemp_dy.					(_gsSqueakTemp_P := _gsSqueakTemp_P - _gsSqueakTemp_py) < 0						ifTrue: [destX := destX + _gsSqueakTemp_dx.							_gsSqueakTemp_P := _gsSqueakTemp_P + _gsSqueakTemp_px].					i < _gsSqueakTemp_px						ifTrue: [self copyBits]]]