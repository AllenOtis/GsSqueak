set u DataCurator p swordfish
login

category: 'experiment'
method: Object
bar
	^ 42
%

commit
break method Object bar

run
Object new bar.
%

c

break list

#-------- add lazy load methods
category: 'experiment'
method: Behavior
copyMethod: aSelector to: envId
	| method |
	method := self compiledMethodAt: aSelector environmentId: 0 otherwise: nil.
	method ifNil: [
		^ self = Object
			ifTrue: [false]
			ifFalse: [(self superclassForEnv: 0) copyMethod: aSelector to: envId]].
	
	"Transfer method from env0 to envId"
	
	self
	  compileMethod: method sourceString
	  dictionaries: GsSession currentSession symbolList
	  category: (self categoryOfSelector: aSelector environrunmentId: 0)
	  environmentId: envId.
	^ true
%

category: 'experiment'
method: Object
doesNotUnderstand: aSymbol args: anArray envId: envId
  | ex |
  (envId = 7) ifTrue: [
	self class copyMethod: aSymbol to: envId.
	
	^ self perform: aSymbol env: 7 withArguments: anArray].
  (ex := MessageNotUnderstood _basicNew)
    receiver: self
    selector: aSymbol
    args: anArray
    envId: envId.
  ^ ex signal
%
#-----------------

break list

run
Object new @env7: bar
%
# ArgumentError (expected)

break list
# No breaks set (unexpected)

break method Object bar
break list 
# No breaks set (still unexpected)
